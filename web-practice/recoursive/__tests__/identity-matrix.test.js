import { identityMatrixCheck } from '../identity-matrix';

describe('identity-matrix tests', () => {
    test.each([
        [
            [
                [1, 2, 3, 2, 0, 1, 2],
                [0, 1, 0, 0, 0, 3, 0],
                [0, 0, 1, 0, 0, 0, 0],
                [5, 0, 0, 1, 0, 0, 0],
                [7, 0, 0, 0, 1, 0, 0],
                [8, 0, 0, 0, 0, 1, 0],
                [1, 0, 0, 0, 0, 0, 0],
            ],
            0,
            1,
            true,
        ],
        [
            [
                [1, 2, 3, 2, 0, 1, 2],
                [0, 1, 0, 0, 0, 3, 0],
                [0, 0, 1, 0, 0, 0, 0],
                [5, 0, 0, 1, 0, 0, 0],
                [7, 0, 0, 0, 1, 0, 0],
                [8, 0, 0, 0, 0, 1, 0],
                [1, 0, 0, 0, 0, 0, 0],
            ],
            1,
            1,
            true,
        ],
        [
            [
                [1, 2, 3, 2, 0, 1, 2],
                [0, 1, 0, 0, 0, 3, 0],
                [0, 0, 1, 0, 0, 0, 0],
                [5, 0, 0, 1, 0, 0, 0],
                [7, 0, 0, 0, 1, 0, 0],
                [8, 0, 0, 0, 0, 1, 0],
                [1, 0, 0, 0, 0, 0, 0],
            ],
            1,
            2,
            true,
        ],
        [
            [
                [1, 2, 3, 2, 0, 1, 2],
                [0, 1, 0, 0, 0, 3, 0],
                [0, 0, 1, 0, 0, 0, 0],
                [5, 0, 0, 1, 0, 0, 0],
                [7, 0, 0, 0, 1, 0, 0],
                [8, 0, 0, 0, 0, 1, 0],
                [1, 0, 0, 0, 0, 0, 0],
            ],
            1,
            3,
            true,
        ],
        [
            [
                [1, 2, 3, 2, 0, 1, 2],
                [0, 1, 0, 0, 0, 3, 0],
                [0, 0, 1, 0, 0, 0, 0],
                [5, 0, 0, 1, 0, 0, 0],
                [7, 0, 0, 0, 1, 0, 0],
                [8, 0, 0, 0, 0, 1, 0],
                [1, 0, 0, 0, 0, 0, 0],
            ],
            1,
            4,
            true,
        ],
        [
            [
                [1, 2, 3, 2, 0, 1, 2],
                [0, 1, 0, 0, 0, 3, 0],
                [0, 0, 1, 0, 0, 0, 0],
                [5, 0, 0, 1, 0, 0, 0],
                [7, 0, 0, 0, 1, 0, 0],
                [8, 0, 0, 0, 0, 1, 0],
                [1, 0, 0, 0, 0, 0, 0],
            ],
            4,
            2,
            true,
        ],
        [
            [
                [1, 2, 3, 2, 0, 1, 2],
                [0, 1, 0, 0, 0, 3, 0],
                [0, 0, 1, 0, 0, 0, 0],
                [5, 0, 0, 1, 0, 0, 0],
                [7, 0, 0, 0, 1, 0, 0],
                [8, 0, 0, 0, 0, 1, 0],
                [1, 0, 0, 0, 0, 0, 0],
            ],
            4,
            1,
            true,
        ],
        [
            [
                [1, 2, 3, 2, 0, 1, 2],
                [0, 1, 0, 0, 0, 3, 0],
                [0, 0, 1, 0, 0, 0, 0],
                [5, 0, 0, 1, 0, 0, 0],
                [7, 0, 0, 0, 1, 0, 0],
                [8, 0, 0, 0, 0, 1, 0],
                [1, 0, 0, 0, 0, 0, 0],
            ],
            4,
            3,
            false,
        ],
    ])(
        'function accept matrix: %s\n with x:%s and size:%s, than returns :%s',
        (matrix, x, size, result) => {
            expect(identityMatrixCheck(matrix, x, size)).toBe(result);
        }
    );
});
